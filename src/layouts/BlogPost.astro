---
import type { CollectionEntry } from 'astro:content'
import FormattedDate from '../components/FormattedDate.astro'
import BaseLayout from './BaseLayout.astro'
import Tag from '../components/Tag.astro'
import type { MarkdownHeading } from 'astro'
import { Image } from 'astro:assets'

type Props = {
  data: CollectionEntry<'blog'>['data']
  headings: MarkdownHeading[]
  readTime: string
}

const { data, readTime } = Astro.props
const { title, description, pubDate, updatedDate, heroImage, tags } = data
const articleDate = pubDate.toISOString()
---

<BaseLayout
  title={title}
  description={description}
  image={heroImage?.src}
  articleDate={articleDate}
>
  <article class='md:py-4 max-w-xs md:max-w-none'>
    <header class='mb-3 flex flex-col justify-center items-center gap-6'>
      <div class='flex flex-col gap-2'>
        <div class='flex items-center justify-center gap-x-1'>
          <p class='text-center text-sm text-opacity-50'>
            Published <FormattedDate date={pubDate} />
          </p>
          <p class='text-center text-sm text-opacity-50 font-bold'>
            - {readTime}
          </p>
        </div>
        <h1 class='text-center text-2xl md:text-5xl font-semibold'>
          {title}
        </h1>
      </div>

      <div class='flex flex-wrap gap-2 md:gap-5'>
        {tags.map((tag) => <Tag>{tag}</Tag>)}
      </div>
    </header>

    <div class='relative'>
      {
        heroImage && (
          <Image
            src={heroImage}
            width={1000}
            height={500}
            quality={100}
            format='jpg'
            class='rounded-md w-full max-h-[500px] my-8 object-cover opacity-0 transition-opacity duration-700 ease-in'
            alt={`img of ${title}`}
          />
        )
      }
      <div
        class='placeholder absolute inset-0 rounded-md backdrop-blur-3xl blur-3xl bg-gradient-to-r from-indigo-500 to-orange-600 transition-opacity duration-700 ease-out'
      >
      </div>
    </div>

    {
      updatedDate && (
        <div class='last-updated-on'>
          Last updated on <FormattedDate date={updatedDate} />
        </div>
      )
    }

    <hr />

    <div class='mt-8 md:px-8'>
      <div
        class='grid grid-cols-4 relative max-w-full prose md:prose-lg dark:prose-invert md:px-2'
      >
        <slot />
      </div>
    </div>
  </article>
</BaseLayout>

<script is:inline>
const img = document.querySelector('img')
const placeholder = document.querySelector('.placeholder')

img?.addEventListener('load', () => {
  img.classList.add('opacity-100')
  placeholder.classList.add('opacity-0')
})
</script>
